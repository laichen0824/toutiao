<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.mapper.MessageMapper">
    <resultMap id="BaseResultMap" type="com.nowcoder.model.Message">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="from_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="to_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
            <arg column="has_read" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="conversation_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="is_delete" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="created_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        id, from_id, to_id, content, has_read, conversation_id, is_delete, created_date
    </sql>

    <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from message
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.nowcoder.model.Message">
        insert into message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="fromId != null">
                from_id,
            </if>
            <if test="toId != null">
                to_id,
            </if>
            <if test="hasRead != null">
                has_read,
            </if>
            <if test="conversationId != null">
                conversation_id,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="fromId != null">
                #{fromId,jdbcType=INTEGER},
            </if>
            <if test="toId != null">
                #{toId,jdbcType=INTEGER},
            </if>
            <if test="hasRead != null">
                #{hasRead,jdbcType=INTEGER},
            </if>
            <if test="conversationId != null">
                #{conversationId,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.nowcoder.model.Message">
        update message
        <set>
            <if test="fromId != null">
                from_id = #{fromId,jdbcType=INTEGER},
            </if>
            <if test="toId != null">
                to_id = #{toId,jdbcType=INTEGER},
            </if>
            <if test="hasRead != null">
                has_read = #{hasRead,jdbcType=INTEGER},
            </if>
            <if test="conversationId != null">
                conversation_id = #{conversationId,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getMessageList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from message
        where to_id = #{userId,jdbcType=INTEGER}
        and is_delete = 0
        order by created_date desc
        limit #{offset}, #{limit}
    </select>

    <select id="getMessageCount" resultType="int">
        select count(id)
        from message
        where to_id = #{userId,jdbcType=INTEGER}
        and is_delete = 0
        <if test="read != null">
            and has_read = 0
        </if>
    </select>

    <update id="read">
        update message
        set has_read = 1
        where has_read = 0
    </update>
</mapper>